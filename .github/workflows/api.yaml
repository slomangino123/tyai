name: API - Create Version, Build, Publish & Deploy

on:
  push:
    branches: [ master ]
    paths: 
      - 'api/**'
      - '.github/workflows/api.yaml'

jobs:
  api_increment_version:
    name: API - Increment Version
    runs-on: ubuntu-latest

    steps: 
    - name: checkout
      uses: actions/checkout@v2
    - name: Increment version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1 # https://github.com/mathieudutour/github-tag-action
      with:
        github_token: ${{ github.token }}
        tag_prefix: 'api-'
    
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}

  api_build_and_publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: api_increment_version
    env:
      IMAGE_TAG: ${{ needs.api_increment_version.outputs.tag }}

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1 # Thank you github https://github.com/aws-actions/configure-aws-credentials
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::836386213271:role/AdminRole
        role-duration-seconds: 1200

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tyai-api
        IMAGE_TAG_LATEST: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST -f api/Dockerfile .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST

  api_deploy_dev:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [api_increment_version, api_build_and_publish]
    env:
      IMAGE_TAG: ${{ needs.api_increment_version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Create Bundle
        run: |
          export IMAGE_TAG
          mkdir bundle
          mkdir bundle/.ebextensions
          cp api/liblogrotate.config bundle/.ebextensions/liblogrotate.config
          envsubst < api/Dockerrun.aws.template.json > bundle/Dockerrun.aws.json
          cd bundle
          zip -r ../bundle.zip ./
    
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1 # Thank you github https://github.com/aws-actions/configure-aws-credentials
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      #     role-to-assume: arn:aws:iam::836386213271:role/AdminRole
      #     role-duration-seconds: 1200
        
      # - run: echo "$AWS_SESSION_TOKEN"

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws_session_token: ${{ env.AWS_SESSION_TOKEN }}
          application_name: tyai
          environment_name: tyai
          version_label: tyai-${{ env.IMAGE_TAG }}
          region: us-east-1
          deployment_package: bundle.zip